model
: name      = file
: comment   = A file. A record of files managed on the file system.
: help...
    ===
    I represent a file stored on the file system.  I only store a reference to the 
    file, NOT the contents of the file itself.
    === 

database
: alias = f

attributes

    field
    : name          = id
    : help          = The globally unique identifier.  This is a big ugly number and is generally not displayed.
    : type          = id
    : identity      = true
    : primaryKey    = true

    field
    : name      = name
    : help      = A file's ORIGINAL name. The name on our system is different. This may be initially unknown (null).
    : type      = text100

    field
    : name      = path
    : help      = The local path to the file. This is not the full file system path, but rather the relative path based on the root directory that contains persistent files.
    : type      = text100
    : required  = true

    field
    : name      = createdUtcTs
    : help      = The date and time when the file was created (in our system).
    : type      = timestamp
    : default   = getNowUtc()
    : required  = true

    field
    : name      = statusCode
    : help      = The status of the file. New: being created, should not use yet. Ready: Available for use; should not not edit. Deleted: The file has been deleted from the file system.
    : type      = letterCode
    : required  = true

        enum
            value(#N New)
            value(#R Ready)
            value(#D Deleted)
            value(#E Error)

    field
    : name      = size
    : help      = The size of the file (in bytes).
    : type      = integer

    field
    : name      = partialSize
    : help      = This is only used when coordinating an asynchronous file upload.  Once the file is fully uploaded (and available) this can be ignored.
    : type      = integer

